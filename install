#!/bin/bash -

set -o nounset

function create_link {
	local target=$1
	local link_name=$2
	if [ ! -f "${link_name}" ] && [ ! -L "${link_name}" ]; then
		ln -s "$target" "${link_name}"
	elif [ -L "${link_name}" ] && [ ! -e "${link_name}" ]; then
		echo "${link_name}: is broken, creating it again"
		rm "${link_name}"
		ln -s "$target" "${link_name}"
	elif [ ! -L "${link_name}" ]; then
		echo -n "${link_name}: already exists but is not a symlink: "
		echo "delete before running this script again"
	else
		echo "${link_name}: Nothing to do"
	fi
}

################################################################################
# GIT
mkdir -p "$HOME/git"

if [ ! -d "$HOME/git/bash-git-prompt/" ]; then
	git clone https://github.com/magicmonty/bash-git-prompt.git "$HOME/git/"
fi

create_link ".dotfiles/git/gitconfig" "$HOME/.gitconfig"
create_link ".dotfiles/git/gitignore" "$HOME/.gitignore"

if ! command -v pre-commit &> /dev/null; then
	echo "Please install pre-commit:"
	echo " $ pip3 install --user pre-commit"
fi

################################################################################
# BASH
mkdir -p "$HOME/.bash_history_dir"
mkdir -p "$HOME/.bashrc_dir"
mkdir -p "$HOME/scripts"

create_link ".dotfiles/bash/bashrc" "$HOME/.bashrc"
create_link "../.dotfiles/bash/lslast" "$HOME/.bashrc_dir/lslast"

################################################################################
# VIM

mkdir -p "$HOME/.vim/autoload"
create_link ".dotfiles/vim/vimrc" "$HOME/.vimrc"
create_link "../.dotfiles/vim/templates" "$HOME/.vim/templates"
create_link "../.dotfiles/vim/colors" "$HOME/.vim/colors"

if [ ! -f "$HOME/.vim/autoload/plug.vim" ]; then
	curl -fLo "$HOME/.vim/autoload/plug.vim" --create-dirs \
		https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	vim +PlugInstall +qall
fi

if ! command -v shellcheck &> /dev/null; then
	url="https://github.com/koalaman/shellcheck/releases/download/stable/"
	url+="/shellcheck-stable.linux.x87_64.tar.xz"
	echo "Please install shellcheck (maybe from here?):"
	echo " $ wget $url"
fi

if ! command -v bashate &> /dev/null; then
	echo "Please install bashate (maybe from here?):"
	echo " $ pip3 install --user bashate"
fi
if ! command -v shfmt &> /dev/null; then
	url="https://github.com/mvdan/sh/releases/download/v3.2.0/"
	url+="shfmt_v3.2.0_linux_amd64"
	echo "Please install shfmt:"
	echo " $ wget $url"
fi

if ! command -v markdownlint &> /dev/null; then
	echo "Please install markdownlint:"
	echo " $ npm install markdownlint-cli"
	echo "OR with nodeenv"
	echo " $ nodeenv ~/.local/lib/markdownlint"
	echo " $ source ~/.local/lib/markdownlint/bin/activate"
	echo " $ npm install markdownlint-cli"
	echo " $ deactivate_node"
	echo " $ echo '#!/bin/bash' > ~/.local/bin/markdownlint"
	echo -n " $ echo 'source \$HOME/.local/lib/markdownlint/bin/activate'"
	echo " >> ~/.local/bin/markdownlint"
	echo -n " $ echo '$HOME/.local/lib/markdownlint/node_module/markdownlint-cli/"
	echo "mardownlint.js' \$@ >> ~/.local/bin/markdownlint"
	echo " $ chmod +x ~/.local/bin/markdownlint"
fi

if ! command -v proselint &> /dev/null; then
	echo "Please install proselint:"
	echo " $ pip3 install --user proselint"
fi

if ! command -v ansible-lint &> /dev/null; then
	echo "Please install ansible-lint:"
	echo " $ pip3 install --user ansible-lint"
fi

################################################################################
# PACKAGE CHECKER
create_link "../../.dotfiles/scripts/pipchk" "$HOME/.local/bin/pipchk"
create_link "../../.dotfiles/scripts/gitchk" "$HOME/.local/bin/gitchk"

################################################################################
# TMUX
create_link ".dotfiles/tmux.conf" "$HOME/.tmux.conf"

# EDITORCONFIG
create_link ".dotfiles/editorconfig" "$HOME/.editorconfig"

# DIGRC
create_link ".dotfiles/digrc" "$HOME/.digrc"
