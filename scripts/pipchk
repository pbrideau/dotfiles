#!/bin/bash

function pipchk {
	declare -a PIP_PACKAGE_TO_CHECK
	declare -A PIP_PACKAGE_TO_IGNORE

	# shellcheck disable=SC1091
	source "$HOME/.pipchkrc"

	local latest_version current_version
	local chk version
	local pypi_url='https://pypi.org/pypi'

	declare -i pip_to_update=0
	echo "Checking latest versions from ${pypi_url}"
	for p in "${PIP_PACKAGE_TO_CHECK[@]}"; do
		if pipx list --json | jq -r '.venvs | keys[]' | grep --quiet "$p"; then
			current_version=$(pipx list --json |
				jq -r ".venvs.\"${p}\".metadata.main_package.package_version")
		else
			current_version=''
		fi

		latest_version=$(
			curl -L -s "${pypi_url}/${p}/json" |
				jq --raw-output '.info.version'
		)

		if [[ -z "$current_version" ]]; then
			chk="[$(tput setaf 3)-$(tput sgr0)]"
			version="(not currently installed)"
		elif [ "$latest_version" = "${PIP_PACKAGE_TO_IGNORE[$p]}" ]; then
			chk="[$(tput setaf 2)✔$(tput sgr0)]"
			version="$current_version (ignored: $latest_version)"
		elif [ "$current_version" != "$latest_version" ]; then
			chk="[$(tput setaf 1)✘$(tput sgr0)]"
			version="$current_version (latest: $latest_version)"
			pip_to_update+=1
		else
			chk="[$(tput setaf 2)✔$(tput sgr0)]"
			version="$current_version"
		fi
		printf "%s %-20s %s\n" "$chk" "$p" "$version"
	done

	echo "$pip_to_update" > "$HOME/.pipchk_count"

}

pipchk
