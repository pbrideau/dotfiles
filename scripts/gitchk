#!/bin/bash

if ! command -v lastversion &> /dev/null; then
	echo "This program require 'lastversion', you can install it with:"
	echo "pip3 install --user lastversion"
	exit 1
fi

function gitchk {
	declare -A GIT_PACKAGE_TO_CHECK
	declare -A GIT_PACKAGE_VERSION

	# shellcheck disable=SC1090
	source "$HOME/.gitchkrc"

	local latest_version current_version
	local chk version
	local git_url='https://github.com'
	local semver_regex='(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.'
	semver_regex+='(?P<patch>0|[1-9]\d*)'
	semver_regex+='(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)'
	semver_regex+='(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?'
	semver_regex+='(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?'

	declare -i git_to_update=0
	echo "Checking latest versions from ${git_url}"
	for p in "${!GIT_PACKAGE_TO_CHECK[@]}"; do
		current_version=$(echo "${GIT_PACKAGE_VERSION[$p]}" | grep -P -o "$semver_regex")
		latest_version=$(
			lastversion "${git_url}/${GIT_PACKAGE_TO_CHECK[$p]}"
		)
		latest_version=$(echo "$latest_version" | grep -P -o "$semver_regex")
		if [ "$current_version" != "$latest_version" ]; then
			chk="[$(tput setaf 1)✘$(tput sgr0)]"
			version="$current_version (latest: $latest_version)"
			git_to_update+=1
		else
			chk="[$(tput setaf 3)✔$(tput sgr0)]"
			version="$current_version"
		fi
		printf "%s %-20s %s\n" "$chk" "$p" "$version"
	done

	echo "$git_to_update" > "$HOME/.gitchk_count"

}

gitchk
